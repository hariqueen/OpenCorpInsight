OpenCorpInsight-new 최종 서비스 연동 가이드

1) 개요
- HTTP 기반 MCP-풍 Tool API(FastAPI, Uvicorn)
- 상장사만 지원, 키 로딩은 AWS Secrets Manager 전용
- 관측성(OTel), 레이트리밋(Redis), Docker/ECR/ECS 배포

2) 시크릿/환경 구성
- Secrets Manager: OPENCORPINSIGHT_SECRETS = {"DART_API_KEY":"...","PERPLEXITY_API_KEY":"..."}
- ENV:
  AWS_REGION=ap-northeast-2
  REDIS_HOST=<redis_endpoint>, REDIS_PORT=6379
  CACHE_TTL=600(옵션)
  RL_CAP=5, RL_RATE=5
  OTEL_SERVICE_NAME=opencorpinsight-http
  OTEL_EXPORTER_OTLP_ENDPOINT=<otel_collector_http_endpoint>

3) 네트워킹/VPC
- VPC: Public(ALB), Private(ECS/Redis)
- SG: ALB 80/443 오픈 → ECS 8080 허용, NAT로 아웃바운드
- WAF 권장(OWASP/Bot 룰)

4) Redis(ElastiCache)
- 캐시/레이트리밋 상태 저장
- 모니터링: 메모리/연결/CPU

5) ECR/ECS/ALB
- ECR 리포지토리 생성: opencorpinsight-http
- ECS Fargate Task/Service/TargetGroup/ALB 구성
- 헬스체크: /v1/tools 또는 /health

6) IAM
- Execution Role: ECR Pull, CW Logs
- Task Role: Secrets 읽기(해당 ARN만), CW Logs

7) CI/CD(GitHub Actions)
- 워크플로: 도커 빌드→ECR Push→ECS 배포
- 필요 시크릿: AWS_REGION, AWS_ROLE_ARN, ECR_REPOSITORY, ECS_CLUSTER, ECS_SERVICE 등

8) API 사용법
- GET /v1/tools: 도구 목록(MCP-풍 스키마)
- POST /v1/tools/{name}:call → {"arguments": {...}}
- 예: get_financial_statements
  arguments: { corp_code, bsns_year, reprt_code(11011/12/13/14), fs_div(CFS/OFS), statement_type }

9) 레이트리밋(토큰버킷)
- 미들웨어로 전역 적용(기본 cap=5, rate=5/sec)
- 429 반환 시 재시도 딜레이
- 경로/도구별 차등 설정 가능

10) OpenTelemetry
- FastAPI/requests 인스트루먼트
- OTLP Exporter → Collector/X-Ray/Datadog
- TraceID를 로그에 상관(구조화 로그)

11) 인증/보안(권장)
- API Gateway+WAF+JWT/OIDC(Cognito)
- 입력검증(Pydantic), 민감정보 로그 금지, 최소권한 IAM

12) 관측성/알람
- CloudWatch Logs(JSON), 알람: 5xx/레이턴시/차단율/리소스 사용량
- Trace: tool 호출, DART 요청, Redis 액세스 스팬 확인

13) 배포 전략
- Blue/Green(권장) 또는 Rolling
- 실패 시 자동 롤백, 이전 이미지 태그 재배포 경로 마련

14) 단계별 체크리스트
- /v1/tools 200 OK, 예상 도구 포함
- 대표 corp_code로 재무제표 호출 성공
- 레이트리밋 정상(임계치 초과 시 429)
- Trace 스팬 노출, 로그-트레이스 상관 OK
- 알람 수신 확인

15) 호스트앱 연동(LLM)
- /v1/tools로 도구 스키마 수집 → /v1/tools/{name}:call로 호출
- MCP 의미론(도구/스키마/결정적 호출)은 유지, 전송만 HTTP
- 인증 토큰(JWT) 첨부, 프롬프트에서 도구 호출 조건 검사

부록) 파일·경로 요약
- app/main.py: FastAPI 엔트리, 레이트리밋·OTel 미들웨어
- app/core/*: secrets, cache(Redis), dart_client, services, rate_limit
- app/tool_registry.py & app/schemas.py: 도구/스키마 정의
- Dockerfile, ecs-task-def.json, .github/workflows/deploy.yml